{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","className","styles","list","this","props","options","map","option","index","item","button","type","onClick","onLeaveFeedback","Component","Statistics","good","neutral","bad","total","positivePercentage","text","isNaN","Notification","message","Section","title","children","section","App","state","onFeedbackButtonClick","response","setState","previousState","Object","values","reduce","accumulator","responses","countTotalFeedback","positive","Math","round","keys","totalResponses","positiveFeedbackPercentage","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,IAAM,wBAAwB,KAAO,2B,qBCAvHD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,iBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,QAAU,gC,mKCGtBC,E,4JAMF,WAAU,IAAD,OACL,OACI,oBAAIC,UAAWC,IAAOC,KAAtB,SACAC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAQC,GAC5B,OACI,oBAAIR,UAAWC,IAAOQ,KAAtB,SACI,wBACIT,UAAWC,IAAOS,OAClBC,KAAK,SACLC,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,IAH9C,SAKKA,KANwBC,Y,GAXvBM,aA2Bff,I,gBCSAgB,MArCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,+BACI,qBAAIpB,UAAWC,IAAOQ,KAAtB,UACI,mBAAGT,UAAWC,IAAOoB,KAArB,mBACA,+BAAOL,OAEX,qBAAIhB,UAAWC,IAAOQ,KAAtB,UACI,mBAAGT,UAAWC,IAAOoB,KAArB,sBACA,+BAAOJ,OAEX,qBAAIjB,UAAWC,IAAOQ,KAAtB,UACI,mBAAGT,UAAWC,IAAOoB,KAArB,kBACA,+BAAOH,OAEX,qBAAIlB,UAAWC,IAAOQ,KAAtB,UACI,mBAAGT,UAAWC,IAAOoB,KAArB,oBACA,+BAAOF,OAEX,qBAAInB,UAAWC,IAAOQ,KAAtB,UACI,mBAAGT,UAAWC,IAAOoB,KAArB,gCACA,uBAAMrB,UAAWoB,GAAsB,GAAKnB,IAAOe,KAAOf,IAAOiB,IAAjE,UACKI,MAAMF,GAAsB,EAAIA,EADrC,c,iBCXDG,MAVf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mBAAGxB,UAAWC,IAAOuB,QAArB,SAA+BA,K,gBCMxBC,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OACI,0BAAS3B,UAAWC,IAAO2B,QAA3B,UACI,oBAAI5B,UAAWC,IAAOyB,MAAtB,SAA8BA,IAC7BC,MCEPE,E,4MAKJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,sBAAwB,SAAAC,GACtB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAEF,EAAWE,EAAcF,GAAY,O,wDAIlD,WAEE,OADkBG,OAAOC,OAAOjC,KAAK2B,OACpBO,QAAO,SAACC,EAAaC,GAAd,OAA4BD,EAAcC,IAAW,K,6CAG/E,WACE,IAAMpB,EAAQhB,KAAKqC,qBACbC,EAAWtC,KAAK2B,MAAMd,KAC5B,OAAO0B,KAAKC,MAAMF,EAAWtB,EAAQ,O,oBAGvC,WACE,IAAMd,EAAU8B,OAAOS,KAAKzC,KAAK2B,OAC3Be,EAAiB1C,KAAKqC,qBACtBM,EAA6B3C,KAAK4C,kCAExC,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAASA,EACTQ,gBAAiBV,KAAK4B,0BAG1B,cAAC,EAAD,CAASL,MAAM,aAAf,SAEEmB,EAAiB,EAEf,cAAC,EAAD,CACE7B,KAAMb,KAAK2B,MAAMd,KACjBC,QAASd,KAAK2B,MAAMb,QACpBC,IAAKf,KAAK2B,MAAMZ,IAChBC,MAAO0B,EACPzB,mBAAoB0B,IAGpB,cAAC,EAAD,CACEtB,QAAQ,+B,GAtDNV,aA+DHe,IClEfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70cbf459.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2dERD\",\"text\":\"Statistics_text__1USBT\",\"bad\":\"Statistics_bad__9R-Q8\",\"good\":\"Statistics_good__RS_kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2y0s1\",\"item\":\"FeedbackOptions_item__2sbpB\",\"button\":\"FeedbackOptions_button__1VgWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3JbDP\",\"title\":\"Section_title__1FZ2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2FZp-\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nclass FeedbackOptions extends Component {\r\n    static propTypes = {\r\n        options: PropTypes.arrayOf(PropTypes.string),\r\n        onLeaveFeedback: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={styles.list}>{\r\n            this.props.options.map((option, index) => {\r\n                return (\r\n                    <li className={styles.item} key={index}>\r\n                        <button\r\n                            className={styles.button}\r\n                            type=\"button\"\r\n                            onClick={() => this.props.onLeaveFeedback(option)}\r\n                        >\r\n                            {option}\r\n                        </button>\r\n                    </li>\r\n                );\r\n            })\r\n        }</ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <ul>\r\n            <li className={styles.item}>\r\n                <p className={styles.text}>Good:</p>\r\n                <span>{good}</span>\r\n            </li>\r\n            <li className={styles.item}>\r\n                <p className={styles.text}>Neutral:</p>\r\n                <span>{neutral}</span>\r\n            </li>\r\n            <li className={styles.item}>\r\n                <p className={styles.text}>Bad:</p>\r\n                <span>{bad}</span>\r\n            </li>\r\n            <li className={styles.item}>\r\n                <p className={styles.text}>Total:</p>\r\n                <span>{total}</span>\r\n            </li>\r\n            <li className={styles.item}>\r\n                <p className={styles.text}>Positive Feedback:</p>\r\n                <span className={positivePercentage >= 50 ? styles.good : styles.bad}>\r\n                    {isNaN(positivePercentage) ? 0 : positivePercentage}%\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <p className={styles.message}>{message}</p>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default Notification;","import styles from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <section className={styles.section}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Section;","import { Component, Fragment } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\n\nclass App extends Component {\n\n  static defaultProps;\n  static propTypes;\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n  \n  onFeedbackButtonClick = response => {\n    this.setState(previousState => {\n      return {[response]: previousState[response] + 1}\n    });\n  }\n\n  countTotalFeedback() {\n    const responses = Object.values(this.state);\n    return responses.reduce((accumulator, responses) => accumulator + responses, 0)\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    const positive = this.state.good;\n    return Math.round(positive / total * 100);\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const totalResponses = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Fragment>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onFeedbackButtonClick}\n        />\n        </Section>\n        <Section title=\"Statistics\">\n          {\n          totalResponses > 0\n            ?\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalResponses}\n              positivePercentage={positiveFeedbackPercentage}\n            />\n            :\n              <Notification\n                message=\"No feedback given\"\n              />\n        }\n        </Section>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n\n"],"sourceRoot":""}